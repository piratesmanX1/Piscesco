@model Piscesco.Models.Order
@using Piscesco.Controllers
@using Microsoft.AspNetCore.Identity
@using Piscesco.Areas.Identity.Data

@inject SignInManager<PiscescoUser> SignInManager
@inject UserManager<PiscescoUser> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    BlobsController bc = new BlobsController();
    Product product = ViewData["Product"] as Product;
    Order order = ViewData["Order"] as Order;
    Uri imageUri = bc.GetImage(product.ProductImage);
}

@if (TempData["Message"] != null)
{
    <script>alert("@TempData["Message"]");</script>
}

<div class="main-wrapper">
    <div class="container" style="border-radius: 5px; padding: 32px; box-shadow: 1px 1px 5px 0px rgb(0 0 0 / 75%);">
        <div class="d-flex flex-row">
            <h1 class="d-flex justify-content-start">Product</h1>
        </div>
        <div>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.ProductID)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => product.ProductID)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.ProductName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => product.ProductName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.ProductDescription)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => product.ProductDescription)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.Price)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => product.Price)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.ProductUnit)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => product.ProductUnit)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.Stock)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => product.Stock)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => product.ProductImage)
                </dt>
                <dd class="col-sm-10">
                    <img src="@imageUri" style="max-height:300px;max-width:300px" />
                </dd>
            </dl>
        </div>
        <form asp-action="AddToCart">
            <div class="form-group" style="width:200px">
                @if (SignInManager.IsSignedIn(User))
                {
                    var loginSession = await UserManager.FindByIdAsync(UserManager.GetUserId(User));

                    if (loginSession.Role == "Customer")
                    {
                        <label asp-for="ProductQuantity" class="control-label"></label>
                        <input asp-for="ProductQuantity" value="@(order != null ? order.ProductQuantity : 1)" min="1" max="@product.Stock" class="form-control" />
                        <span asp-validation-for="ProductQuantity" class="text-danger"></span>
                    }
                }
            </div>
            <div class="form-group">
                <input asp-for="StallID" type="hidden" class="form-control" value="@product.StallID" />
                <input asp-for="ProductID" type="hidden" class="form-control" value="@product.ProductID" />
                <input asp-for="ProductName" type="hidden" class="form-control" value="@product.ProductName" />
                @if (SignInManager.IsSignedIn(User))
                {
                    var loginSession = await UserManager.FindByIdAsync(UserManager.GetUserId(User));

                    if (loginSession.Role == "Customer")
                    {
                        <input type="submit" value="@(order != null ? "Update Cart" : "Add to cart")" @(product.Stock == 0 ? "disabled" : "enabled") class="btn btn-success" />
                    }
                }
            </div>
        </form>

        <div>
            <a asp-action="BrowseProducts" asp-route-id="@product.StallID">Back to List</a>
        </div>
    </div>
</div>